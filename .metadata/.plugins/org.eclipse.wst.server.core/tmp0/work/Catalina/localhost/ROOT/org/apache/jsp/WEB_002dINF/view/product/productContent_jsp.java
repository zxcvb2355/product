/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2023-02-09 04:32:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import main.a.b.product.vo.ProductVO;
import main.a.b.common.NumUtils;
import main.a.b.common.CodeUtils;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class productContent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("main.a.b.common.CodeUtils");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("main.a.b.product.vo.ProductVO");
    _jspx_imports_classes.add("main.a.b.common.NumUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resource/selectContent.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	const vali = /^\\s+|\\s+$/g; \r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("	\r\n");
      out.write("		$(\"#checkBtn\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			if($(\"#pname\").val().replace(vali, '' ) == \"\" ){\r\n");
      out.write("			    alert('공백만 입력할 수는 없습니다.');\r\n");
      out.write("			}else{\r\n");
      out.write("				\r\n");
      out.write("				let pname = $(\"#pname\").val();\r\n");
      out.write("				let url = \"pnameCheck\";\r\n");
      out.write("				let method = \"POST\";\r\n");
      out.write("				let dataParam = {pname:pname,};\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					 url:url,\r\n");
      out.write("					 type:method,\r\n");
      out.write("					 data:dataParam,\r\n");
      out.write("					 success:whenSuccess,\r\n");
      out.write("					 error:whenError\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("				function whenSuccess(data){\r\n");
      out.write("					if(data == \"PNAMENOPE\"){\r\n");
      out.write("						alert(\"사용가능한 물품명입니다\");\r\n");
      out.write("						$(\"#insertBtn\").prop('disabled', false);\r\n");
      out.write("						$(\"#dis\").remove();\r\n");
      out.write("					}else{\r\n");
      out.write("						alert(\"이미 사용중인 물품명입니다\");\r\n");
      out.write("						$(\"#pname\").val(\"\");\r\n");
      out.write("					}\r\n");
      out.write("							\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("				function whenError(e){\r\n");
      out.write("					alert(\"실패함 : \" + e.responseText);\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(\"#resetBtn\").click(function(){\r\n");
      out.write("			 \r\n");
      out.write("		\r\n");
      out.write("			 $(\"#val\").val(\"00\");\r\n");
      out.write("			 \r\n");
      out.write("			 let nowPage = null;\r\n");
      out.write("			 $(\"#nowPage\").val(nowPage);\r\n");
      out.write("			 \r\n");
      out.write("			 \r\n");
      out.write("			 $(\"#product\").attr({\r\n");
      out.write("				 'action':'products',\r\n");
      out.write("				'method':'POST',\r\n");
      out.write("				'enctype':'application/x-www-form-urlencoded'\r\n");
      out.write("			 }).submit();\r\n");
      out.write("	 	});\r\n");
      out.write("	\r\n");
      out.write("		$(\"#insertBtn\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("			if($(\"#pcontent\").val() == null || $(\"#pcontent\").val().replace(vali, '' ) == \"\" ){\r\n");
      out.write("				alert(\"상품 설명을 기입해주세요\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if($(\"#ppay\").val() == null || $(\"#ppay\").val().replace(vali, '' ) == \"\" ){\r\n");
      out.write("				alert(\"가격을 기입해주세요\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if($(\"#pcount\").val() == null || $(\"#pcount\").val().replace(vali, '' ) == \"\" ){\r\n");
      out.write("				alert(\"재고 수량을 기입해주세요\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if($(\"#pimage\").val() == null || $(\"#pimage\").val().replace(vali, '' ) == \"\" ){\r\n");
      out.write("				let oKey = confirm(\"상품 이미지가 없다면 고객들이 상품에 대한 이미지를 볼 수 없습니다. \\n 그래도 등록하시겠습니까\");\r\n");
      out.write("				if(oKey){\r\n");
      out.write("					\r\n");
      out.write("				}else{\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("			\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			let p1 = $(\"#p1\").val();\r\n");
      out.write("			let pc = $(\"#pc\").val();\r\n");
      out.write("			let de = $(\"#de\").val();\r\n");
      out.write("			\r\n");
      out.write("			$(\"#pcategory\").val(p1);\r\n");
      out.write("			$(\"#pcategory_detail\").val(pc);\r\n");
      out.write("			$(\"#detail_product\").val(de);\r\n");
      out.write("			\r\n");
      out.write("			$(\"#product\").attr({\r\n");
      out.write("				'action':'productInsert',\r\n");
      out.write("				'method':'POST',\r\n");
      out.write("				'enctype':'multipart/form-data'				\r\n");
      out.write("			}).submit();\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("		$(\"#delBtn\").click(function(){\r\n");
      out.write("	 		\r\n");
      out.write("	 		\r\n");
      out.write("	 		let oKey = confirm(\"상품을 삭제하시겠습니까?\");\r\n");
      out.write("			\r\n");
      out.write("	 			if(oKey){\r\n");
      out.write("		 			\r\n");
      out.write("		 			$(\"#product\").attr({\r\n");
      out.write("		 	 			'action':'productDelete',\r\n");
      out.write("		 	 			'method':'POST',\r\n");
      out.write("		 	 			'enctype':'application/x-www-form-urlencoded'\r\n");
      out.write("		 	 		}).submit();\r\n");
      out.write("		 		\r\n");
      out.write("		 		}else{\r\n");
      out.write("		 			alert(\"취소되었습니다.\");\r\n");
      out.write("		 		}\r\n");
      out.write("	 		\r\n");
      out.write("	 		\r\n");
      out.write("	 	});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("		function back(){\r\n");
      out.write("		  \r\n");
      out.write("			 var form = document.createElement(\"form\");\r\n");
      out.write("	         form.setAttribute(\"charset\", \"UTF-8\");\r\n");
      out.write("	         form.setAttribute(\"method\", \"POST\"); \r\n");
      out.write("	         form.setAttribute(\"action\", \"products\"); \r\n");
      out.write("		\r\n");
      out.write("	         var hiddenField = document.createElement(\"input\");\r\n");
      out.write("	         hiddenField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("	         hiddenField.setAttribute(\"name\", \"val\");\r\n");
      out.write("	         hiddenField.setAttribute(\"value\", \"00\");\r\n");
      out.write("	         form.appendChild(hiddenField);\r\n");
      out.write("	\r\n");
      out.write("	         document.body.appendChild(form);\r\n");
      out.write("	         form.submit();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	Logger logger = LogManager.getLogger(this.getClass());
	logger.info("selectAll 진입");

	Object obj = request.getAttribute("list");
	
	if(obj != null){
	
	List<ProductVO> list = (List<ProductVO>)obj;
	ProductVO pvo = list.get(0);

      out.write("\r\n");
      out.write("<form id=\"product\">\r\n");
      out.write("<br><br><br>\r\n");
      out.write("<h2 style=\"text-align:center;\">상품 상세 보기</h2>\r\n");
      out.write("\r\n");
      out.write("<div id=\"center\">\r\n");
      out.write("				<div id=\"viewTable\">\r\n");
      out.write("				<table id=\"selectContent\">\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td rowspan=\"3\">\r\n");
      out.write("							<div class=\"imgSelect\" style=\"width:200px; height:200px;\">\r\n");
      out.write("								<img src=\"/img/");
      out.print(pvo.getPimage());
      out.write("\" id=\"recipeImg\" name=\"recipeImg\" style=\"width:200px; height:200px;\"/>\r\n");
      out.write("							\r\n");
      out.write("							</div>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					\r\n");
      out.write("					<tr class=\"subjectTr\"> \r\n");
      out.write("						<td class=\"selectTd subjectTd\">\r\n");
      out.write("							<p>");
      out.print(pvo.getPname() );
      out.write("</p>\r\n");
      out.write("							<div id=\"hrDiv\"></div>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					\r\n");
      out.write("						<td class=\"selectTd infoTd\" colspan=\"2\">\r\n");
      out.write("						");
      out.print(pvo.getPcontent() );
      out.write("\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							<div class=\"oneTd\">\r\n");
      out.write("							<br><br><br><br><br><br>\r\n");
      out.write("								<table style=\"text-align:center;\">\r\n");
      out.write("									<tr>\r\n");
      out.write("										<td class=\"nameTd\">\r\n");
      out.write("										가격\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<td class=\"valTd\">\r\n");
      out.write("											");
      out.print(NumUtils.comma(pvo.getPpay()) );
      out.write("원\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("									<td><br><br><br><br>\r\n");
      out.write("									<input type=\"hidden\" name=\"check\" value=\"");
      out.print(pvo.getPname() );
      out.write("\">\r\n");
      out.write("									<input type=\"button\" id=\"resetBtn\" value=\"상품 목록 가기\"><td  colspan='5' style=\"text-align:right;\"></td>\r\n");
      out.write("									<td><br><br><br><br><input type=\"button\" id=\"delBtn\" value=\"상품 삭제\"></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("								</table>					\r\n");
      out.write("							</div>\r\n");
      out.write("							&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("							&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("							&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("							&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("							&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("							<div class=\"oneTd\">\r\n");
      out.write("							\r\n");
      out.write("							<br><br><br><br><br><br>\r\n");
      out.write("								<table>\r\n");
      out.write("								\r\n");
      out.write("									<tr>\r\n");
      out.write("									\r\n");
      out.write("										<td class=\"nameTd\">\r\n");
      out.write("										재고\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<td class=\"valTd\">\r\n");
      out.write("											");
      out.print(CodeUtils.inttoText(pvo.getPcount()) );
      out.write("\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("								</table>\r\n");
      out.write("							</div>	\r\n");
      out.write("						</td>	\r\n");
      out.write("					</tr>		\r\n");
      out.write("				</table>\r\n");
      out.write("				</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				</form>\r\n");
      out.write("				\r\n");

	}else{

      out.write("\r\n");
      out.write("<form id=\"product\">\r\n");
      out.write("<br><br><br>\r\n");
      out.write("<h2 style=\"text-align:center;\">상품 등록</h2><br><br>\r\n");
      out.write("<table border=\"1\" align=\"center\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>상품명</td>\r\n");
      out.write("		<td><input type=\"text\" id=\"pname\" name=\"pname\" placeholder=\"물품명 기입\"><input type=\"button\" id=\"checkBtn\" value=\"물품명 중복확인\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>상품설명</td>\r\n");
      out.write("		<td><textarea id=\"pcontent\" name=\"pcontent\" placeholder=\"상품 설명 기입\"></textarea>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>상품가격</td>\r\n");
      out.write("		<td><input type=\"text\" id=\"ppay\" name=\"ppay\" placeholder=\"가격 기입\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>재고수량</td>\r\n");
      out.write("		<td><input type=\"text\" id=\"pcount\" name=\"pcount\" placeholder=\"재고 수량 기입\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>분류</td>\r\n");
      out.write("		<td><select id=\"p1\">\r\n");
      out.write("				<option value=\"01\" id=\"pcate1\" selected>남성</option>\r\n");
      out.write("				<option value=\"02\" id=\"pcate2\">여성</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<select id=\"pc\">\r\n");
      out.write("				<option value=\"01\" id=\"pcate_d1\" selected>샴푸</option>\r\n");
      out.write("				<option value=\"02\" id=\"pcate_d2\">로션</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<select id=\"de\">\r\n");
      out.write("				<option value=\"01\" id=\"detail_p2\" selected>천연</option>\r\n");
      out.write("				<option value=\"02\" id=\"detail_p3\">모공 축소</option>\r\n");
      out.write("				<option value=\"03\" id=\"detail_p4\">향기</option>\r\n");
      out.write("				<option value=\"04\" id=\"detail_p5\">기타</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>이미지</td>\r\n");
      out.write("		<td><input type=\"file\" id=\"pimage\" name=\"pimage\" value=\"파일 찾아보기\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\" style=\"text-align:left;\"><input type=\"button\" id=\"backBtn\" value=\"상품 목록 가기\" onclick=\"back()\">\r\n");
      out.write("		<input type=\"button\" id=\"insertBtn\" value=\"상품 등록\" disabled><font style=\"color:red;font-size:2px;\" style=\"text-align:left;\" id=\"dis\">물품명 중복확인 시 해제됩니다.</font>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
 		
	}

      out.write("\r\n");
      out.write("	<input type=\"hidden\" name=\"pnum\" id=\"pnum\" value=\"\" />\r\n");
      out.write("	<input type=\"hidden\" id=\"val\" name=\"val\" value=\"\">\r\n");
      out.write("	<input type=\"hidden\" id=\"pcategory1\" name=\"pcategory\" value=\"\">\r\n");
      out.write("	<input type=\"hidden\" id=\"pcategory_detail\" name=\"pcategory_detail\" value=\"\">\r\n");
      out.write("	<input type=\"hidden\" id=\"detail_product\" name=\"detail_product\" value=\"\">\r\n");
      out.write("	<input type=\"hidden\" id=\"nowPage\" name=\"nowPage\" value=\"\">\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
